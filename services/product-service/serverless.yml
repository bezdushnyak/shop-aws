service: product-service

provider:
  name: aws
  stage: dev
  region: eu-north-1
  runtime: nodejs18.x
  profile: serverless
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: "*"

package:
  individually: true

plugins:
  - serverless-auto-swagger
  - serverless-dynamodb
  - serverless-webpack
  - serverless-offline
  - serverless-offline-watcher

custom:
  webpack:
    webpackConfig: "webpack.config.js"
    includeModules: true
    packager: "npm"
    excludeFiles: src/**/*.test.js

  autoswagger:
    apiType: http
    typefiles: []
    basePath: /${sls:stage}

  serverless-offline:
    httpPort: 3000
    lambdaPort: 3001

  serverless-offline-watcher:
    - path: src/**/*

  serverless-dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      port: 8000
      seed: true
      migrate: true
    seed:
      products:
        sources:
          - table: products
            sources: [./src/data/seed/seedData/products.json]
          - table: stocks
            sources: [./src/data/seed/seedData/stocks.json]

functions:
  createProduct:
    handler: src/handlers/createProduct.default
    events:
      - http:
          path: products
          method: post
          cors: true

  getProductsList:
    handler: src/handlers/getProductsList.default
    events:
      - http:
          path: products
          method: get

  getProductById:
    handler: src/handlers/getProductById.default
    events:
      - http:
          path: products/{productId}
          method: get

resources:
  Resources:
    productsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: products
        TableClass: STANDARD
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    stocksTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: stocks
        TableClass: STANDARD
        AttributeDefinitions:
          - AttributeName: productId
            AttributeType: S
        KeySchema:
          - AttributeName: productId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
